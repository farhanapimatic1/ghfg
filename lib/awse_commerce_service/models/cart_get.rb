# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AwseCommerceService
  # CartGet Model.
  class CartGet < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :marketplace_domain

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :aws_access_key_id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :associate_tag

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :validate

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :xml_escaping

    # TODO: Write general description for this method
    # @return [CartGetRequest]
    attr_accessor :shared

    # TODO: Write general description for this method
    # @return [List of CartGetRequest]
    attr_accessor :request

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['marketplace_domain'] = 'MarketplaceDomain'
      @_hash['aws_access_key_id'] = 'AWSAccessKeyId'
      @_hash['associate_tag'] = 'AssociateTag'
      @_hash['validate'] = 'Validate'
      @_hash['xml_escaping'] = 'XMLEscaping'
      @_hash['shared'] = 'Shared'
      @_hash['request'] = 'Request'
      @_hash
    end

    def initialize(marketplace_domain = nil,
                   aws_access_key_id = nil,
                   associate_tag = nil,
                   validate = nil,
                   xml_escaping = nil,
                   shared = nil,
                   request = nil)
      @marketplace_domain = marketplace_domain
      @aws_access_key_id = aws_access_key_id
      @associate_tag = associate_tag
      @validate = validate
      @xml_escaping = xml_escaping
      @shared = shared
      @request = request
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      marketplace_domain = hash['MarketplaceDomain']
      aws_access_key_id = hash['AWSAccessKeyId']
      associate_tag = hash['AssociateTag']
      validate = hash['Validate']
      xml_escaping = hash['XMLEscaping']
      shared = CartGetRequest.from_hash(hash['Shared']) if hash['Shared']
      # Parameter is an array, so we need to iterate through it
      request = nil
      unless hash['Request'].nil?
        request = []
        hash['Request'].each do |structure|
          request << (CartGetRequest.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      CartGet.new(marketplace_domain,
                  aws_access_key_id,
                  associate_tag,
                  validate,
                  xml_escaping,
                  shared,
                  request)
    end
  end
end
