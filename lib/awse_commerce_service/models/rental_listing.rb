# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AwseCommerceService
  # RentalListing Model.
  class RentalListing < BaseModel
    # TODO: Write general description for this method
    # @return [Price]
    attr_accessor :price

    # TODO: Write general description for this method
    # @return [NonNegativeIntegerWithUnits]
    attr_accessor :period

    # TODO: Write general description for this method
    # @return [Boolean]
    attr_accessor :is_fulfilled_by_amazon

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :disclaimer

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['price'] = 'Price'
      @_hash['period'] = 'Period'
      @_hash['is_fulfilled_by_amazon'] = 'IsFulfilledByAmazon'
      @_hash['disclaimer'] = 'Disclaimer'
      @_hash
    end

    def initialize(price = nil,
                   period = nil,
                   is_fulfilled_by_amazon = nil,
                   disclaimer = nil)
      @price = price
      @period = period
      @is_fulfilled_by_amazon = is_fulfilled_by_amazon
      @disclaimer = disclaimer
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      price = Price.from_hash(hash['Price']) if hash['Price']
      period = NonNegativeIntegerWithUnits.from_hash(hash['Period']) if
        hash['Period']
      is_fulfilled_by_amazon = hash['IsFulfilledByAmazon']
      disclaimer = hash['Disclaimer']

      # Create object from extracted values.
      RentalListing.new(price,
                        period,
                        is_fulfilled_by_amazon,
                        disclaimer)
    end
  end
end
