# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AwseCommerceService
  # ItemSearchRequest Model.
  class ItemSearchRequest < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :actor

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :artist

    # TODO: Write general description for this method
    # @return [AvailabilityEnum]
    attr_accessor :availability

    # TODO: Write general description for this method
    # @return [List of AudienceRatingEnum]
    attr_accessor :audience_rating

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :author

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :brand

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :browse_node

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :composer

    # TODO: Write general description for this method
    # @return [ConditionEnum]
    attr_accessor :condition

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :conductor

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :director

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :item_page

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :keywords

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :manufacturer

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :maximum_price

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :merchant_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :minimum_price

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :min_percentage_off

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :music_label

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :orchestra

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :power

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :publisher

    # TODO: Write general description for this method
    # @return [Object]
    attr_accessor :related_item_page

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :relationship_type

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :response_group

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :search_index

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :sort

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :release_date

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :include_reviews_summary

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :truncate_reviews_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['actor'] = 'Actor'
      @_hash['artist'] = 'Artist'
      @_hash['availability'] = 'Availability'
      @_hash['audience_rating'] = 'AudienceRating'
      @_hash['author'] = 'Author'
      @_hash['brand'] = 'Brand'
      @_hash['browse_node'] = 'BrowseNode'
      @_hash['composer'] = 'Composer'
      @_hash['condition'] = 'Condition'
      @_hash['conductor'] = 'Conductor'
      @_hash['director'] = 'Director'
      @_hash['item_page'] = 'ItemPage'
      @_hash['keywords'] = 'Keywords'
      @_hash['manufacturer'] = 'Manufacturer'
      @_hash['maximum_price'] = 'MaximumPrice'
      @_hash['merchant_id'] = 'MerchantId'
      @_hash['minimum_price'] = 'MinimumPrice'
      @_hash['min_percentage_off'] = 'MinPercentageOff'
      @_hash['music_label'] = 'MusicLabel'
      @_hash['orchestra'] = 'Orchestra'
      @_hash['power'] = 'Power'
      @_hash['publisher'] = 'Publisher'
      @_hash['related_item_page'] = 'RelatedItemPage'
      @_hash['relationship_type'] = 'RelationshipType'
      @_hash['response_group'] = 'ResponseGroup'
      @_hash['search_index'] = 'SearchIndex'
      @_hash['sort'] = 'Sort'
      @_hash['title'] = 'Title'
      @_hash['release_date'] = 'ReleaseDate'
      @_hash['include_reviews_summary'] = 'IncludeReviewsSummary'
      @_hash['truncate_reviews_at'] = 'TruncateReviewsAt'
      @_hash
    end

    def initialize(actor = nil,
                   artist = nil,
                   availability = nil,
                   audience_rating = nil,
                   author = nil,
                   brand = nil,
                   browse_node = nil,
                   composer = nil,
                   condition = nil,
                   conductor = nil,
                   director = nil,
                   item_page = nil,
                   keywords = nil,
                   manufacturer = nil,
                   maximum_price = nil,
                   merchant_id = nil,
                   minimum_price = nil,
                   min_percentage_off = nil,
                   music_label = nil,
                   orchestra = nil,
                   power = nil,
                   publisher = nil,
                   related_item_page = nil,
                   relationship_type = nil,
                   response_group = nil,
                   search_index = nil,
                   sort = nil,
                   title = nil,
                   release_date = nil,
                   include_reviews_summary = nil,
                   truncate_reviews_at = nil)
      @actor = actor
      @artist = artist
      @availability = availability
      @audience_rating = audience_rating
      @author = author
      @brand = brand
      @browse_node = browse_node
      @composer = composer
      @condition = condition
      @conductor = conductor
      @director = director
      @item_page = item_page
      @keywords = keywords
      @manufacturer = manufacturer
      @maximum_price = maximum_price
      @merchant_id = merchant_id
      @minimum_price = minimum_price
      @min_percentage_off = min_percentage_off
      @music_label = music_label
      @orchestra = orchestra
      @power = power
      @publisher = publisher
      @related_item_page = related_item_page
      @relationship_type = relationship_type
      @response_group = response_group
      @search_index = search_index
      @sort = sort
      @title = title
      @release_date = release_date
      @include_reviews_summary = include_reviews_summary
      @truncate_reviews_at = truncate_reviews_at
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      actor = hash['Actor']
      artist = hash['Artist']
      availability = hash['Availability']
      audience_rating = hash['AudienceRating']
      author = hash['Author']
      brand = hash['Brand']
      browse_node = hash['BrowseNode']
      composer = hash['Composer']
      condition = hash['Condition']
      conductor = hash['Conductor']
      director = hash['Director']
      item_page = hash['ItemPage']
      keywords = hash['Keywords']
      manufacturer = hash['Manufacturer']
      maximum_price = hash['MaximumPrice']
      merchant_id = hash['MerchantId']
      minimum_price = hash['MinimumPrice']
      min_percentage_off = hash['MinPercentageOff']
      music_label = hash['MusicLabel']
      orchestra = hash['Orchestra']
      power = hash['Power']
      publisher = hash['Publisher']
      related_item_page = hash['RelatedItemPage']
      relationship_type = hash['RelationshipType']
      response_group = hash['ResponseGroup']
      search_index = hash['SearchIndex']
      sort = hash['Sort']
      title = hash['Title']
      release_date = hash['ReleaseDate']
      include_reviews_summary = hash['IncludeReviewsSummary']
      truncate_reviews_at = hash['TruncateReviewsAt']

      # Create object from extracted values.
      ItemSearchRequest.new(actor,
                            artist,
                            availability,
                            audience_rating,
                            author,
                            brand,
                            browse_node,
                            composer,
                            condition,
                            conductor,
                            director,
                            item_page,
                            keywords,
                            manufacturer,
                            maximum_price,
                            merchant_id,
                            minimum_price,
                            min_percentage_off,
                            music_label,
                            orchestra,
                            power,
                            publisher,
                            related_item_page,
                            relationship_type,
                            response_group,
                            search_index,
                            sort,
                            title,
                            release_date,
                            include_reviews_summary,
                            truncate_reviews_at)
    end
  end
end
