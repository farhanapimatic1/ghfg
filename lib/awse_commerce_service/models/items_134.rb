# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AwseCommerceService
  # Items134 Model.
  class Items134 < BaseModel
    # TODO: Write general description for this method
    # @return [Request]
    attr_accessor :request

    # TODO: Write general description for this method
    # @return [CorrectedQuery]
    attr_accessor :corrected_query

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :qid

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :engine_query

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_results

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :total_pages

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :more_search_results_url

    # TODO: Write general description for this method
    # @return [SearchResultsMap]
    attr_accessor :search_results_map

    # TODO: Write general description for this method
    # @return [List of Item133]
    attr_accessor :item

    # TODO: Write general description for this method
    # @return [SearchBinSets]
    attr_accessor :search_bin_sets

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request'] = 'Request'
      @_hash['corrected_query'] = 'CorrectedQuery'
      @_hash['qid'] = 'Qid'
      @_hash['engine_query'] = 'EngineQuery'
      @_hash['total_results'] = 'TotalResults'
      @_hash['total_pages'] = 'TotalPages'
      @_hash['more_search_results_url'] = 'MoreSearchResultsUrl'
      @_hash['search_results_map'] = 'SearchResultsMap'
      @_hash['item'] = 'Item'
      @_hash['search_bin_sets'] = 'SearchBinSets'
      @_hash
    end

    def initialize(request = nil,
                   corrected_query = nil,
                   qid = nil,
                   engine_query = nil,
                   total_results = nil,
                   total_pages = nil,
                   more_search_results_url = nil,
                   search_results_map = nil,
                   item = nil,
                   search_bin_sets = nil)
      @request = request
      @corrected_query = corrected_query
      @qid = qid
      @engine_query = engine_query
      @total_results = total_results
      @total_pages = total_pages
      @more_search_results_url = more_search_results_url
      @search_results_map = search_results_map
      @item = item
      @search_bin_sets = search_bin_sets
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request = Request.from_hash(hash['Request']) if hash['Request']
      corrected_query = CorrectedQuery.from_hash(hash['CorrectedQuery']) if
        hash['CorrectedQuery']
      qid = hash['Qid']
      engine_query = hash['EngineQuery']
      total_results = hash['TotalResults']
      total_pages = hash['TotalPages']
      more_search_results_url = hash['MoreSearchResultsUrl']
      search_results_map = SearchResultsMap.from_hash(hash['SearchResultsMap']) if
        hash['SearchResultsMap']
      # Parameter is an array, so we need to iterate through it
      item = nil
      unless hash['Item'].nil?
        item = []
        hash['Item'].each do |structure|
          item << (Item133.from_hash(structure) if structure)
        end
      end
      search_bin_sets = SearchBinSets.from_hash(hash['SearchBinSets']) if
        hash['SearchBinSets']

      # Create object from extracted values.
      Items134.new(request,
                   corrected_query,
                   qid,
                   engine_query,
                   total_results,
                   total_pages,
                   more_search_results_url,
                   search_results_map,
                   item,
                   search_bin_sets)
    end
  end
end
