# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AwseCommerceService
  # Offer Model.
  class Offer < BaseModel
    # TODO: Write general description for this method
    # @return [Merchant]
    attr_accessor :merchant

    # TODO: Write general description for this method
    # @return [OfferAttributes]
    attr_accessor :offer_attributes

    # TODO: Write general description for this method
    # @return [List of OfferListing]
    attr_accessor :offer_listing

    # TODO: Write general description for this method
    # @return [LoyaltyPoints]
    attr_accessor :loyalty_points

    # TODO: Write general description for this method
    # @return [Promotions]
    attr_accessor :promotions

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['merchant'] = 'Merchant'
      @_hash['offer_attributes'] = 'OfferAttributes'
      @_hash['offer_listing'] = 'OfferListing'
      @_hash['loyalty_points'] = 'LoyaltyPoints'
      @_hash['promotions'] = 'Promotions'
      @_hash
    end

    def initialize(merchant = nil,
                   offer_attributes = nil,
                   offer_listing = nil,
                   loyalty_points = nil,
                   promotions = nil)
      @merchant = merchant
      @offer_attributes = offer_attributes
      @offer_listing = offer_listing
      @loyalty_points = loyalty_points
      @promotions = promotions
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      merchant = Merchant.from_hash(hash['Merchant']) if hash['Merchant']
      offer_attributes = OfferAttributes.from_hash(hash['OfferAttributes']) if
        hash['OfferAttributes']
      # Parameter is an array, so we need to iterate through it
      offer_listing = nil
      unless hash['OfferListing'].nil?
        offer_listing = []
        hash['OfferListing'].each do |structure|
          offer_listing << (OfferListing.from_hash(structure) if structure)
        end
      end
      loyalty_points = LoyaltyPoints.from_hash(hash['LoyaltyPoints']) if
        hash['LoyaltyPoints']
      promotions = Promotions.from_hash(hash['Promotions']) if
        hash['Promotions']

      # Create object from extracted values.
      Offer.new(merchant,
                offer_attributes,
                offer_listing,
                loyalty_points,
                promotions)
    end
  end
end
