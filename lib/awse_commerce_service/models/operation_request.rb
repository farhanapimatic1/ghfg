# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module AwseCommerceService
  # OperationRequest Model.
  class OperationRequest < BaseModel
    # TODO: Write general description for this method
    # @return [HTTPHeaders]
    attr_accessor :http_headers

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :request_id

    # TODO: Write general description for this method
    # @return [Arguments]
    attr_accessor :arguments

    # TODO: Write general description for this method
    # @return [Errors]
    attr_accessor :errors

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :request_processing_time

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['http_headers'] = 'HTTPHeaders'
      @_hash['request_id'] = 'RequestId'
      @_hash['arguments'] = 'Arguments'
      @_hash['errors'] = 'Errors'
      @_hash['request_processing_time'] = 'RequestProcessingTime'
      @_hash
    end

    def initialize(http_headers = nil,
                   request_id = nil,
                   arguments = nil,
                   errors = nil,
                   request_processing_time = nil)
      @http_headers = http_headers
      @request_id = request_id
      @arguments = arguments
      @errors = errors
      @request_processing_time = request_processing_time
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      http_headers = HTTPHeaders.from_hash(hash['HTTPHeaders']) if
        hash['HTTPHeaders']
      request_id = hash['RequestId']
      arguments = Arguments.from_hash(hash['Arguments']) if hash['Arguments']
      errors = Errors.from_hash(hash['Errors']) if hash['Errors']
      request_processing_time = hash['RequestProcessingTime']

      # Create object from extracted values.
      OperationRequest.new(http_headers,
                           request_id,
                           arguments,
                           errors,
                           request_processing_time)
    end
  end
end
